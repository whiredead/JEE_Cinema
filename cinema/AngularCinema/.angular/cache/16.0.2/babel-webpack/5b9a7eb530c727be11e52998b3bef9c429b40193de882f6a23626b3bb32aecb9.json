{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CinemaComponent = class CinemaComponent {\n  constructor(cinemaservice) {\n    this.cinemaservice = cinemaservice;\n  }\n  ngOnInit() {\n    this.cinemaservice.getVilles().subscribe(data => {\n      this.villes = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  // @ts-ignore\n  OnGetCinema(v) {\n    this.currentVille = v;\n    this.salles = undefined;\n    this.cinemaservice.getCinemas(v).subscribe(data => {\n      this.cinemas = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  // @ts-ignore\n  OnGetSalles(c) {\n    this.cinemaservice.getSalles(c).subscribe(data => {\n      this.salles = data;\n      // @ts-ignore\n      this.salles._embedded.salles.forEach(salle => {\n        this.cinemaservice.getProjections(salle).subscribe(data => {\n          salle.projections = data;\n        }, err => {\n          console.log(err);\n        });\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  // @ts-ignore\n  OnGetTicketPlace(p) {\n    this.currentProjection = p;\n    this.cinemaservice.getPlace(p).subscribe(data => {\n      this.ticket = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n};\nCinemaComponent = __decorate([Component({\n  selector: 'app-cinema',\n  templateUrl: './cinema.component.html',\n  styleUrls: ['./cinema.component.css']\n})], CinemaComponent);\nexport { CinemaComponent };","map":{"version":3,"names":["Component","CinemaComponent","constructor","cinemaservice","ngOnInit","getVilles","subscribe","data","villes","error","console","log","OnGetCinema","v","currentVille","salles","undefined","getCinemas","cinemas","err","OnGetSalles","c","getSalles","_embedded","forEach","salle","getProjections","projections","OnGetTicketPlace","p","currentProjection","getPlace","ticket","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Belmoudden El hachmy\\IdeaProjects\\AngularCinema\\src\\app\\cinema\\cinema.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {CinemaService} from \"../services/cinema.service\";\n\n@Component({\n  selector: 'app-cinema',\n  templateUrl: './cinema.component.html',\n  styleUrls: ['./cinema.component.css']\n})\nexport class CinemaComponent implements OnInit{\n  // @ts-ignore\n  public villes;\n\n  // @ts-ignore\n  public cinemas;\n  // @ts-ignore\n  public salles;\n\n  // @ts-ignore\n  public currentVille;\n\n  // @ts-ignore\n  public currentCinema;\n  // @ts-ignore\n  public currentProjection;\n  // @ts-ignore\n  private ticket;\n  constructor(public cinemaservice:CinemaService) {\n  }\n  ngOnInit(): void {\n    this.cinemaservice.getVilles()\n      .subscribe(data=>{\n        this.villes=data;\n      },error => {\n        console.log(error);\n      })\n  }\n\n  // @ts-ignore\n  OnGetCinema(v): void {\n    this.currentVille=v;\n    this.salles=undefined;\n    this.cinemaservice.getCinemas(v)\n      .subscribe(data=>{\n        this.cinemas=data;\n      },err => {\n        console.log(err);\n      })\n\n  }\n  // @ts-ignore\n  OnGetSalles(c): void {\n    this.cinemaservice.getSalles(c)\n      .subscribe(data=>{\n        this.salles=data;\n        // @ts-ignore\n        this.salles._embedded.salles.forEach(salle=>{\n          this.cinemaservice.getProjections(salle)\n            .subscribe(data=>{\n              salle.projections=data;\n            },err => {\n              console.log(err);\n            })\n        })\n      },err => {\n        console.log(err);\n      })\n\n  }\n\n  // @ts-ignore\n  OnGetTicketPlace(p) {\n    this.currentProjection=p;\n    this.cinemaservice.getPlace(p)\n      .subscribe(data=>{\n        this.ticket=data;\n      },err => {\n        console.log(err);\n      })\n\n  }\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAS/C,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAkB1BC,YAAmBC,aAA2B;IAA3B,KAAAA,aAAa,GAAbA,aAAa;EAChC;EACAC,QAAQA,CAAA;IACN,IAAI,CAACD,aAAa,CAACE,SAAS,EAAE,CAC3BC,SAAS,CAACC,IAAI,IAAE;MACf,IAAI,CAACC,MAAM,GAACD,IAAI;IAClB,CAAC,EAACE,KAAK,IAAG;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEA;EACAG,WAAWA,CAACC,CAAC;IACX,IAAI,CAACC,YAAY,GAACD,CAAC;IACnB,IAAI,CAACE,MAAM,GAACC,SAAS;IACrB,IAAI,CAACb,aAAa,CAACc,UAAU,CAACJ,CAAC,CAAC,CAC7BP,SAAS,CAACC,IAAI,IAAE;MACf,IAAI,CAACW,OAAO,GAACX,IAAI;IACnB,CAAC,EAACY,GAAG,IAAG;MACNT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAClB,CAAC,CAAC;EAEN;EACA;EACAC,WAAWA,CAACC,CAAC;IACX,IAAI,CAAClB,aAAa,CAACmB,SAAS,CAACD,CAAC,CAAC,CAC5Bf,SAAS,CAACC,IAAI,IAAE;MACf,IAAI,CAACQ,MAAM,GAACR,IAAI;MAChB;MACA,IAAI,CAACQ,MAAM,CAACQ,SAAS,CAACR,MAAM,CAACS,OAAO,CAACC,KAAK,IAAE;QAC1C,IAAI,CAACtB,aAAa,CAACuB,cAAc,CAACD,KAAK,CAAC,CACrCnB,SAAS,CAACC,IAAI,IAAE;UACfkB,KAAK,CAACE,WAAW,GAACpB,IAAI;QACxB,CAAC,EAACY,GAAG,IAAG;UACNT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;QAClB,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC,EAACA,GAAG,IAAG;MACNT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAClB,CAAC,CAAC;EAEN;EAEA;EACAS,gBAAgBA,CAACC,CAAC;IAChB,IAAI,CAACC,iBAAiB,GAACD,CAAC;IACxB,IAAI,CAAC1B,aAAa,CAAC4B,QAAQ,CAACF,CAAC,CAAC,CAC3BvB,SAAS,CAACC,IAAI,IAAE;MACf,IAAI,CAACyB,MAAM,GAACzB,IAAI;IAClB,CAAC,EAACY,GAAG,IAAG;MACNT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAClB,CAAC,CAAC;EAEN;CACD;AAxEYlB,eAAe,GAAAgC,UAAA,EAL3BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWnC,eAAe,CAwE3B;SAxEYA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}