{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CinemaComponent = class CinemaComponent {\n  constructor(cinemaservice) {\n    this.cinemaservice = cinemaservice;\n  }\n  ngOnInit() {\n    this.cinemaservice.getVilles().subscribe(data => {\n      this.villes = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  // @ts-ignore\n  OnGetCinema(v) {\n    this.currentVille = v;\n    this.salles = undefined;\n    this.cinemaservice.getCinemas(v).subscribe(data => {\n      this.cinemas = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  // @ts-ignore\n  OnGetSalles(c) {\n    this.currentCinema = c;\n    this.cinemaservice.getSalles(c).subscribe(data => {\n      this.salles = data;\n      // @ts-ignore\n      this.salles._embedded.salles.forEach(salle => {\n        this.cinemaservice.getProjections(salle).subscribe(data => {\n          salle.projections = data;\n        }, err => {\n          console.log(err);\n        });\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  // @ts-ignore\n  OnGetTicketPlace(p) {\n    this.currentProjection = p;\n    this.cinemaservice.getTicketsPlaces(p).subscribe(data => {\n      this.currentProjection.tickets = data;\n      this.selectedTickets = [];\n    }, err => {\n      console.log(err);\n    });\n  }\n  // @ts-ignore\n  onSelectTicket(t) {\n    console.log(JSON.stringify(t.selected) + \" OnselectTicket\");\n    if (!t.selected) {\n      t.selected = true;\n      this.selectedTickets.push(t);\n    }\n    t.selected = false;\n    this.selectedTickets.splice(this.selectedTickets.indexOf(t), 1);\n  }\n  // @ts-ignore\n  getTicketClass(t) {\n    let str = \"btn \";\n    if (t.reserve == true) {\n      str += \"btn-danger\";\n    } else if (t.selected) {\n      str += \"btn-warning\";\n    } else {\n      str += \"btn-success\";\n    }\n    return str;\n  }\n  // @ts-ignore\n  OnPayTicket(dataForm) {}\n};\nCinemaComponent = __decorate([Component({\n  selector: 'app-cinema',\n  templateUrl: './cinema.component.html',\n  styleUrls: ['./cinema.component.css']\n})], CinemaComponent);\nexport { CinemaComponent };","map":{"version":3,"names":["Component","CinemaComponent","constructor","cinemaservice","ngOnInit","getVilles","subscribe","data","villes","error","console","log","OnGetCinema","v","currentVille","salles","undefined","getCinemas","cinemas","err","OnGetSalles","c","currentCinema","getSalles","_embedded","forEach","salle","getProjections","projections","OnGetTicketPlace","p","currentProjection","getTicketsPlaces","tickets","selectedTickets","onSelectTicket","t","JSON","stringify","selected","push","splice","indexOf","getTicketClass","str","reserve","OnPayTicket","dataForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Belmoudden El hachmy\\IdeaProjects\\AngularCinema\\src\\app\\cinema\\cinema.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {CinemaService} from \"../services/cinema.service\";\n\n@Component({\n  selector: 'app-cinema',\n  templateUrl: './cinema.component.html',\n  styleUrls: ['./cinema.component.css']\n})\nexport class CinemaComponent implements OnInit{\n  // @ts-ignore\n  public villes;\n\n  // @ts-ignore\n  public cinemas;\n  // @ts-ignore\n  public salles;\n\n  // @ts-ignore\n  public currentVille;\n\n  // @ts-ignore\n  public currentCinema;\n  // @ts-ignore\n  public currentProjection;\n  // @ts-ignore\n  private ticket;\n\n  // @ts-ignore\n  private selectedTickets;\n  constructor(public cinemaservice:CinemaService) {\n  }\n  ngOnInit(): void {\n    this.cinemaservice.getVilles()\n      .subscribe(data=>{\n        this.villes=data;\n      },error => {\n        console.log(error);\n      })\n  }\n\n  // @ts-ignore\n  OnGetCinema(v): void {\n    this.currentVille=v;\n    this.salles=undefined;\n    this.cinemaservice.getCinemas(v)\n      .subscribe(data=>{\n        this.cinemas=data;\n      },err => {\n        console.log(err);\n      })\n\n  }\n  // @ts-ignore\n  OnGetSalles(c): void {\n    this.currentCinema=c;\n    this.cinemaservice.getSalles(c)\n      .subscribe(data=>{\n        this.salles=data;\n        // @ts-ignore\n        this.salles._embedded.salles.forEach(salle=>{\n          this.cinemaservice.getProjections(salle)\n            .subscribe(data=>{\n              salle.projections=data;\n            },err => {\n              console.log(err);\n            })\n        })\n      },err => {\n        console.log(err);\n      })\n\n  }\n\n  // @ts-ignore\n  OnGetTicketPlace(p) {\n    this.currentProjection=p;\n    this.cinemaservice.getTicketsPlaces(p)\n      .subscribe(data=>{\n        this.currentProjection.tickets=data;\n        this.selectedTickets=[];\n      },err => {\n        console.log(err);\n      })\n\n  }\n  // @ts-ignore\n\n  onSelectTicket(t){\n    console.log(JSON.stringify(t.selected)+\" OnselectTicket\");\n    if(!t.selected){\n      t.selected=true;\n      this.selectedTickets.push(t);\n    }\n    t.selected=false;\n    this.selectedTickets.splice(this.selectedTickets.indexOf(t),1);\n  }\n\n  // @ts-ignore\n\n  getTicketClass(t) {\n    let str=\"btn \";\n    if(t.reserve==true){\n      str+=\"btn-danger\";\n    }\n    else if(t.selected){\n      str+=\"btn-warning\"\n    }\n    else{\n      str+=\"btn-success\"\n    }\n    return str;\n  }\n\n  // @ts-ignore\n  OnPayTicket(dataForm) {\n\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}